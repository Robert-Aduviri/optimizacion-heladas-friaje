set I; # items

set ST; # supply and transshipment nodes
set D; # demand nodes
set K := ST union D; # all nodes 
set E within {K, K}; # all edges

set DU; # dummy nodes
set KDU := K union DU; # all nodes + dummies
set EDU within {KDU,KDU}; # all edges + dummies

# param item_priority {I};
param transp_cost {E};
param supply_demand {KDU, I};
param node_capacity {K};

var X {EDU, I} >= 0 integer; # items to be transported

minimize Objectives: # item_priority[i] 
	(sum {(k,j) in E, i in I} transp_cost[k,j] * X[k,j,i]) + 
	10000*(sum {k in D, i in I} ((sum {(j,k) in E} X[j,k,i]) / -supply_demand[k,i]) ^ 2); # fairness
	
subject to Transportation_Balance {k in KDU, i in I}:
	sum {(k,j) in EDU} X[k,j,i] - sum {(j,k) in EDU} X[j,k,i] = supply_demand[k,i];

subject to Inbound_Capacity {k in K}:
	sum {(j,k) in E, i in I} X[j,k,i] <= node_capacity[k];
	
subject to Outbound_Capacity {k in K}:
	sum {(k,j) in E, i in I} X[k,j,i] <= node_capacity[k];
	
data;
set I := I1 I2 I3 I4 I5;
set ST := S1 S2 S3 S4 S5 S6 S7 T11 T12 T13 T14 T15 T16 T17 T18 T21 T22 T23 T24 T25;
set D := D1 D2 D3 D4 D5 D6 D7 D8 D9 D10;
set DU := dummy_sup dummy_dem;

set E := 
   (S1,T11) (S1,T12) (S1,T13) (S1,T14) (S1,T15) (S1,T16) (S1,T17) (S1,T18) (S2,T11) (S2,T12) (S2,T13) (S2,T14) (S2,T15) (S2,T16) (S2,T17) (S2,T18) (S3,T11) (S3,T12) (S3,T13) (S3,T14) (S3,T15) (S3,T16) (S3,T17) (S3,T18) (S4,T11) (S4,T12) (S4,T13) (S4,T14) (S4,T15) (S4,T16) (S4,T17) (S4,T18) (S5,T11) (S5,T12) (S5,T13) (S5,T14) (S5,T15) (S5,T16) (S5,T17) (S5,T18) (S6,T11) (S6,T12) (S6,T13) (S6,T14) (S6,T15) (S6,T16) (S6,T17) (S6,T18) (S7,T11) (S7,T12) (S7,T13) (S7,T14) (S7,T15) (S7,T16) (S7,T17) (S7,T18)
   (T11,T21) (T11,T22) (T11,T23) (T11,T24) (T11,T25) (T12,T21) (T12,T22) (T12,T23) (T12,T24) (T12,T25) (T13,T21) (T13,T22) (T13,T23) (T13,T24) (T13,T25) (T14,T21) (T14,T22) (T14,T23) (T14,T24) (T14,T25) (T15,T21) (T15,T22) (T15,T23) (T15,T24) (T15,T25) (T16,T21) (T16,T22) (T16,T23) (T16,T24) (T16,T25) (T17,T21) (T17,T22) (T17,T23) (T17,T24) (T17,T25) (T18,T21) (T18,T22) (T18,T23) (T18,T24) (T18,T25)
   (T21,D1) (T21,D2) (T21,D3) (T21,D4) (T21,D5) (T21,D6) (T21,D7) (T21,D8) (T21,D9) (T21,D10) (T22,D1) (T22,D2) (T22,D3) (T22,D4) (T22,D5) (T22,D6) (T22,D7) (T22,D8) (T22,D9) (T22,D10) (T23,D1) (T23,D2) (T23,D3) (T23,D4) (T23,D5) (T23,D6) (T23,D7) (T23,D8) (T23,D9) (T23,D10) (T24,D1) (T24,D2) (T24,D3) (T24,D4) (T24,D5) (T24,D6) (T24,D7) (T24,D8) (T24,D9) (T24,D10) (T25,D1) (T25,D2) (T25,D3) (T25,D4) (T25,D5) (T25,D6) (T25,D7) (T25,D8) (T25,D9) (T25,D10)
;

set EDU := 
   (S1,T11) (S1,T12) (S1,T13) (S1,T14) (S1,T15) (S1,T16) (S1,T17) (S1,T18) (S2,T11) (S2,T12) (S2,T13) (S2,T14) (S2,T15) (S2,T16) (S2,T17) (S2,T18) (S3,T11) (S3,T12) (S3,T13) (S3,T14) (S3,T15) (S3,T16) (S3,T17) (S3,T18) (S4,T11) (S4,T12) (S4,T13) (S4,T14) (S4,T15) (S4,T16) (S4,T17) (S4,T18) (S5,T11) (S5,T12) (S5,T13) (S5,T14) (S5,T15) (S5,T16) (S5,T17) (S5,T18) (S6,T11) (S6,T12) (S6,T13) (S6,T14) (S6,T15) (S6,T16) (S6,T17) (S6,T18) (S7,T11) (S7,T12) (S7,T13) (S7,T14) (S7,T15) (S7,T16) (S7,T17) (S7,T18)
   (T11,T21) (T11,T22) (T11,T23) (T11,T24) (T11,T25) (T12,T21) (T12,T22) (T12,T23) (T12,T24) (T12,T25) (T13,T21) (T13,T22) (T13,T23) (T13,T24) (T13,T25) (T14,T21) (T14,T22) (T14,T23) (T14,T24) (T14,T25) (T15,T21) (T15,T22) (T15,T23) (T15,T24) (T15,T25) (T16,T21) (T16,T22) (T16,T23) (T16,T24) (T16,T25) (T17,T21) (T17,T22) (T17,T23) (T17,T24) (T17,T25) (T18,T21) (T18,T22) (T18,T23) (T18,T24) (T18,T25)
   (T21,D1) (T21,D2) (T21,D3) (T21,D4) (T21,D5) (T21,D6) (T21,D7) (T21,D8) (T21,D9) (T21,D10) (T22,D1) (T22,D2) (T22,D3) (T22,D4) (T22,D5) (T22,D6) (T22,D7) (T22,D8) (T22,D9) (T22,D10) (T23,D1) (T23,D2) (T23,D3) (T23,D4) (T23,D5) (T23,D6) (T23,D7) (T23,D8) (T23,D9) (T23,D10) (T24,D1) (T24,D2) (T24,D3) (T24,D4) (T24,D5) (T24,D6) (T24,D7) (T24,D8) (T24,D9) (T24,D10) (T25,D1) (T25,D2) (T25,D3) (T25,D4) (T25,D5) (T25,D6) (T25,D7) (T25,D8) (T25,D9) (T25,D10)
   (S1,dummy_dem) (S2,dummy_dem) (S3,dummy_dem) (S4,dummy_dem) (S5,dummy_dem) (S6,dummy_dem) (S7,dummy_dem)
   (dummy_sup,D1) (dummy_sup,D2) (dummy_sup,D3) (dummy_sup,D4) (dummy_sup,D5) (dummy_sup,D6) (dummy_sup,D7) (dummy_sup,D8) (dummy_sup,D9) (dummy_sup,D10)
;

param transp_cost := S1 T11 189 S1 T12 747 S1 T13 797 S1 T14 415 S1 T15 277 S1 T16 639 S1 T17 831 S1 T18 968 S2 T11 140 S2 T12 839 S2 T13 803 S2 T14 601 S2 T15 244 S2 T16 300 S2 T17 823 S2 T18 560 S3 T11 831 S3 T12 851 S3 T13 657 S3 T14 646 S3 T15 352 S3 T16 489 S3 T17 693 S3 T18 982 S4 T11 355 S4 T12 808 S4 T13 914 S4 T14 549 S4 T15 109 S4 T16 923 S4 T17 897 S4 T18 341 S5 T11 350 S5 T12 976 S5 T13 104 S5 T14 218 S5 T15 900 S5 T16 473 S5 T17 164 S5 T18 245 S6 T11 323 S6 T12 338 S6 T13 276 S6 T14 878 S6 T15 952 S6 T16 381 S6 T17 162 S6 T18 316 S7 T11 953 S7 T12 926 S7 T13 894 S7 T14 788 S7 T15 560 S7 T16 709 S7 T17 204 S7 T18 198 T11 T21 610 T11 T22 484 T11 T23 504 T11 T24 922 T11 T25 617 T12 T21 575 T12 T22 808 T12 T23 962 T12 T24 744 T12 T25 969 T13 T21 870 T13 T22 536 T13 T23 122 T13 T24 664 T13 T25 776 T14 T21 813 T14 T22 557 T14 T23 182 T14 T24 244 T14 T25 184 T15 T21 177 T15 T22 556 T15 T23 977 T15 T24 100 T15 T25 150 T16 T21 784 T16 T22 816 T16 T23 871 T16 T24 545 T16 T25 548 T17 T21 980 T17 T22 587 T17 T23 899 T17 T24 133 T17 T25 447 T18 T21 194 T18 T22 171 T18 T23 650 T18 T24 253 T18 T25 349 T21 D1 773 T21 D2 537 T21 D3 217 T21 D4 870 T21 D5 990 T21 D6 405 T21 D7 367 T21 D8 153 T21 D9 335 T21 D10 488 T22 D1 833 T22 D2 862 T22 D3 924 T22 D4 500 T22 D5 723 T22 D6 866 T22 D7 402 T22 D8 306 T22 D9 328 T22 D10 952 T23 D1 677 T23 D2 174 T23 D3 534 T23 D4 202 T23 D5 521 T23 D6 803 T23 D7 863 T23 D8 837 T23 D9 905 T23 D10 405 T24 D1 197 T24 D2 949 T24 D3 897 T24 D4 434 T24 D5 958 T24 D6 534 T24 D7 546 T24 D8 407 T24 D9 348 T24 D10 265 T25 D1 580 T25 D2 434 T25 D3 641 T25 D4 858 T25 D5 205 T25 D6 662 T25 D7 180 T25 D8 232 T25 D9 896 T25 D10 999;

param supply_demand (tr): S1 S2 S3 S4 S5 S6 S7 T11 T12 T13 T14 T15 T16 T17 T18 T21 T22 T23 T24 T25 D1 D2 D3 D4 D5 D6 D7 D8 D9 D10 dummy_sup dummy_dem := 
    I1 40 50 30 40 50 30 160 0 0 0 0 0 0 0 0 0 0 0 0 0 -20 -50 -70 -60 -60 -20 -40 -90 -70 -20 100 0
    I2 40 60 70 20 50 50 110 0 0 0 0 0 0 0 0 0 0 0 0 0 -80 -30 -20 -30 -40 -50 -50 -40 -30 -130 100 0
    I3 40 60 60 10 70 20 140 0 0 0 0 0 0 0 0 0 0 0 0 0 -20 -10 -40 -50 -40 -30 -40 -80 -20 -170 100 0
    I4 40 30 80 30 30 50 140 0 0 0 0 0 0 0 0 0 0 0 0 0 -20 -70 -60 -70 -60 -70 -60 -40 -20 -30 100 0
    I5 30 20 50 30 80 100 90 0 0 0 0 0 0 0 0 0 0 0 0 0 -40 -70 -40 -30 -20 -60 -30 -50 -90 -70 100 0
;

param node_capacity := S1 190 S2 220 S3 290 S4 130 S5 280 S6 250 S7 640 T11 327 T12 304 T13 316 T14 314 T15 316 T16 322 T17 322 T18 527 T21 490 T22 502 T23 533 T24 489 T25 722 D1 180 D2 230 D3 230 D4 240 D5 220 D6 230 D7 220 D8 300 D9 230 D10 420;

