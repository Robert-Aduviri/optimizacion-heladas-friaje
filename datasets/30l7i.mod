set I; # items

set ST; # supply and transshipment nodes
set D; # demand nodes
set K := ST union D; # all nodes 
set E within {K, K}; # all edges

set DU; # dummy nodes
set KDU := K union DU; # all nodes + dummies
set EDU within {KDU,KDU}; # all edges + dummies

# param item_priority {I};
param transp_cost {E};
param supply_demand {KDU, I};
param node_capacity {K};

var X {EDU, I} >= 0 integer; # items to be transported

minimize Objectives: # item_priority[i] 
	(sum {(k,j) in E, i in I} transp_cost[k,j] * X[k,j,i]) + 
	10000*(sum {k in D, i in I} ((sum {(j,k) in E} X[j,k,i]) / -supply_demand[k,i]) ^ 2); # fairness
	
subject to Transportation_Balance {k in KDU, i in I}:
	sum {(k,j) in EDU} X[k,j,i] - sum {(j,k) in EDU} X[j,k,i] = supply_demand[k,i];

subject to Inbound_Capacity {k in K}:
	sum {(j,k) in E, i in I} X[j,k,i] <= node_capacity[k];
	
subject to Outbound_Capacity {k in K}:
	sum {(k,j) in E, i in I} X[k,j,i] <= node_capacity[k];
	
data;
set I := I1 I2 I3 I4 I5 I6 I7;
set ST := S1 S2 S3 S4 S5 S6 S7 T11 T12 T13 T14 T15 T16 T17 T18 T21 T22 T23 T24 T25;
set D := D1 D2 D3 D4 D5 D6 D7 D8 D9 D10;
set DU := dummy_sup dummy_dem;

set E := 
   (S1,T11) (S1,T12) (S1,T13) (S1,T14) (S1,T15) (S1,T16) (S1,T17) (S1,T18) (S2,T11) (S2,T12) (S2,T13) (S2,T14) (S2,T15) (S2,T16) (S2,T17) (S2,T18) (S3,T11) (S3,T12) (S3,T13) (S3,T14) (S3,T15) (S3,T16) (S3,T17) (S3,T18) (S4,T11) (S4,T12) (S4,T13) (S4,T14) (S4,T15) (S4,T16) (S4,T17) (S4,T18) (S5,T11) (S5,T12) (S5,T13) (S5,T14) (S5,T15) (S5,T16) (S5,T17) (S5,T18) (S6,T11) (S6,T12) (S6,T13) (S6,T14) (S6,T15) (S6,T16) (S6,T17) (S6,T18) (S7,T11) (S7,T12) (S7,T13) (S7,T14) (S7,T15) (S7,T16) (S7,T17) (S7,T18)
   (T11,T21) (T11,T22) (T11,T23) (T11,T24) (T11,T25) (T12,T21) (T12,T22) (T12,T23) (T12,T24) (T12,T25) (T13,T21) (T13,T22) (T13,T23) (T13,T24) (T13,T25) (T14,T21) (T14,T22) (T14,T23) (T14,T24) (T14,T25) (T15,T21) (T15,T22) (T15,T23) (T15,T24) (T15,T25) (T16,T21) (T16,T22) (T16,T23) (T16,T24) (T16,T25) (T17,T21) (T17,T22) (T17,T23) (T17,T24) (T17,T25) (T18,T21) (T18,T22) (T18,T23) (T18,T24) (T18,T25)
   (T21,D1) (T21,D2) (T21,D3) (T21,D4) (T21,D5) (T21,D6) (T21,D7) (T21,D8) (T21,D9) (T21,D10) (T22,D1) (T22,D2) (T22,D3) (T22,D4) (T22,D5) (T22,D6) (T22,D7) (T22,D8) (T22,D9) (T22,D10) (T23,D1) (T23,D2) (T23,D3) (T23,D4) (T23,D5) (T23,D6) (T23,D7) (T23,D8) (T23,D9) (T23,D10) (T24,D1) (T24,D2) (T24,D3) (T24,D4) (T24,D5) (T24,D6) (T24,D7) (T24,D8) (T24,D9) (T24,D10) (T25,D1) (T25,D2) (T25,D3) (T25,D4) (T25,D5) (T25,D6) (T25,D7) (T25,D8) (T25,D9) (T25,D10)
;

set EDU := 
   (S1,T11) (S1,T12) (S1,T13) (S1,T14) (S1,T15) (S1,T16) (S1,T17) (S1,T18) (S2,T11) (S2,T12) (S2,T13) (S2,T14) (S2,T15) (S2,T16) (S2,T17) (S2,T18) (S3,T11) (S3,T12) (S3,T13) (S3,T14) (S3,T15) (S3,T16) (S3,T17) (S3,T18) (S4,T11) (S4,T12) (S4,T13) (S4,T14) (S4,T15) (S4,T16) (S4,T17) (S4,T18) (S5,T11) (S5,T12) (S5,T13) (S5,T14) (S5,T15) (S5,T16) (S5,T17) (S5,T18) (S6,T11) (S6,T12) (S6,T13) (S6,T14) (S6,T15) (S6,T16) (S6,T17) (S6,T18) (S7,T11) (S7,T12) (S7,T13) (S7,T14) (S7,T15) (S7,T16) (S7,T17) (S7,T18)
   (T11,T21) (T11,T22) (T11,T23) (T11,T24) (T11,T25) (T12,T21) (T12,T22) (T12,T23) (T12,T24) (T12,T25) (T13,T21) (T13,T22) (T13,T23) (T13,T24) (T13,T25) (T14,T21) (T14,T22) (T14,T23) (T14,T24) (T14,T25) (T15,T21) (T15,T22) (T15,T23) (T15,T24) (T15,T25) (T16,T21) (T16,T22) (T16,T23) (T16,T24) (T16,T25) (T17,T21) (T17,T22) (T17,T23) (T17,T24) (T17,T25) (T18,T21) (T18,T22) (T18,T23) (T18,T24) (T18,T25)
   (T21,D1) (T21,D2) (T21,D3) (T21,D4) (T21,D5) (T21,D6) (T21,D7) (T21,D8) (T21,D9) (T21,D10) (T22,D1) (T22,D2) (T22,D3) (T22,D4) (T22,D5) (T22,D6) (T22,D7) (T22,D8) (T22,D9) (T22,D10) (T23,D1) (T23,D2) (T23,D3) (T23,D4) (T23,D5) (T23,D6) (T23,D7) (T23,D8) (T23,D9) (T23,D10) (T24,D1) (T24,D2) (T24,D3) (T24,D4) (T24,D5) (T24,D6) (T24,D7) (T24,D8) (T24,D9) (T24,D10) (T25,D1) (T25,D2) (T25,D3) (T25,D4) (T25,D5) (T25,D6) (T25,D7) (T25,D8) (T25,D9) (T25,D10)
   (S1,dummy_dem) (S2,dummy_dem) (S3,dummy_dem) (S4,dummy_dem) (S5,dummy_dem) (S6,dummy_dem) (S7,dummy_dem)
   (dummy_sup,D1) (dummy_sup,D2) (dummy_sup,D3) (dummy_sup,D4) (dummy_sup,D5) (dummy_sup,D6) (dummy_sup,D7) (dummy_sup,D8) (dummy_sup,D9) (dummy_sup,D10)
;

param transp_cost := S1 T11 967 S1 T12 944 S1 T13 358 S1 T14 772 S1 T15 789 S1 T16 109 S1 T17 360 S1 T18 749 S2 T11 271 S2 T12 997 S2 T13 112 S2 T14 267 S2 T15 741 S2 T16 695 S2 T17 420 S2 T18 418 S3 T11 712 S3 T12 428 S3 T13 884 S3 T14 876 S3 T15 649 S3 T16 518 S3 T17 705 S3 T18 194 S4 T11 916 S4 T12 680 S4 T13 417 S4 T14 335 S4 T15 433 S4 T16 984 S4 T17 475 S4 T18 558 S5 T11 236 S5 T12 687 S5 T13 646 S5 T14 612 S5 T15 395 S5 T16 419 S5 T17 671 S5 T18 931 S6 T11 448 S6 T12 939 S6 T13 878 S6 T14 972 S6 T15 328 S6 T16 369 S6 T17 927 S6 T18 897 S7 T11 390 S7 T12 824 S7 T13 264 S7 T14 104 S7 T15 950 S7 T16 478 S7 T17 177 S7 T18 509 T11 T21 673 T11 T22 231 T11 T23 700 T11 T24 848 T11 T25 141 T12 T21 188 T12 T22 501 T12 T23 395 T12 T24 939 T12 T25 394 T13 T21 715 T13 T22 625 T13 T23 899 T13 T24 790 T13 T25 736 T14 T21 521 T14 T22 964 T14 T23 122 T14 T24 674 T14 T25 242 T15 T21 764 T15 T22 244 T15 T23 324 T15 T24 602 T15 T25 920 T16 T21 715 T16 T22 203 T16 T23 138 T16 T24 297 T16 T25 745 T17 T21 678 T17 T22 490 T17 T23 278 T17 T24 653 T17 T25 547 T18 T21 599 T18 T22 114 T18 T23 722 T18 T24 768 T18 T25 388 T21 D1 577 T21 D2 330 T21 D3 519 T21 D4 256 T21 D5 649 T21 D6 540 T21 D7 196 T21 D8 510 T21 D9 388 T21 D10 353 T22 D1 295 T22 D2 697 T22 D3 933 T22 D4 621 T22 D5 616 T22 D6 734 T22 D7 941 T22 D8 964 T22 D9 217 T22 D10 905 T23 D1 258 T23 D2 914 T23 D3 327 T23 D4 976 T23 D5 315 T23 D6 795 T23 D7 114 T23 D8 256 T23 D9 747 T23 D10 360 T24 D1 256 T24 D2 146 T24 D3 423 T24 D4 943 T24 D5 784 T24 D6 229 T24 D7 510 T24 D8 194 T24 D9 726 T24 D10 854 T25 D1 391 T25 D2 893 T25 D3 910 T25 D4 382 T25 D5 168 T25 D6 759 T25 D7 110 T25 D8 353 T25 D9 941 T25 D10 971;

param supply_demand (tr): S1 S2 S3 S4 S5 S6 S7 T11 T12 T13 T14 T15 T16 T17 T18 T21 T22 T23 T24 T25 D1 D2 D3 D4 D5 D6 D7 D8 D9 D10 dummy_sup dummy_dem := 
    I1 40 50 30 40 50 30 160 0 0 0 0 0 0 0 0 0 0 0 0 0 -40 -50 -50 -40 -30 -80 -20 -10 -40 -140 100 0
    I2 40 60 70 20 50 50 110 0 0 0 0 0 0 0 0 0 0 0 0 0 -40 -30 -40 -80 -20 -20 -20 -70 -60 -120 100 0
    I3 40 60 60 10 70 20 140 0 0 0 0 0 0 0 0 0 0 0 0 0 -60 -70 -60 -40 -20 -30 -40 -70 -40 -70 100 0
    I4 40 30 80 30 30 50 140 0 0 0 0 0 0 0 0 0 0 0 0 0 -10 -60 -30 -50 -90 -60 -60 -90 -40 -10 100 0
    I5 30 20 50 30 80 100 90 0 0 0 0 0 0 0 0 0 0 0 0 0 -10 -100 -60 -90 -40 -10 -60 -80 -40 -10 100 0
    I6 20 50 70 60 60 20 120 0 0 0 0 0 0 0 0 0 0 0 0 0 -30 -50 -30 -30 -50 -60 -50 -30 -50 -120 100 0
    I7 80 70 110 80 30 20 10 0 0 0 0 0 0 0 0 0 0 0 0 0 -30 -60 -50 -60 -20 -40 -70 -60 -50 -60 100 0
;

param node_capacity := S1 290 S2 340 S3 470 S4 270 S5 370 S6 290 S7 770 T11 435 T12 412 T13 437 T14 476 T15 449 T16 450 T17 441 T18 754 T21 665 T22 734 T23 707 T24 643 T25 1098 D1 220 D2 420 D3 320 D4 390 D5 270 D6 300 D7 320 D8 410 D9 320 D10 530;

